/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package devicesim;

import devicesim.units.defaults.DirectedCompositeUnit;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author erhannis
 */
public class FrameMain extends javax.swing.JFrame {
  public DefaultListModel<Unit> unitTypeList;
  
  /**
   * Creates new form FrameMain
   */
  public FrameMain() {
    initComponents();
    unitTypeList = new DefaultListModel<Unit>();
    for (Unit u : DeviceEngine.UNIT_ARCHETYPES) {
      unitTypeList.addElement(u);
    }
    listUnitTypes.setModel(unitTypeList);
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jSplitPane1 = new javax.swing.JSplitPane();
    jPanel1 = new javax.swing.JPanel();
    jScrollPane1 = new javax.swing.JScrollPane();
    listUnitTypes = new javax.swing.JList();
    btnNewUnitType = new javax.swing.JButton();
    btnEditUnitType = new javax.swing.JButton();
    btnCloneUnitType = new javax.swing.JButton();
    btnDeleteUnitType = new javax.swing.JButton();
    btnMoveUnitDown = new javax.swing.JButton();
    btnMoveUnitUp = new javax.swing.JButton();
    btnSave = new javax.swing.JButton();
    jPanel2 = new javax.swing.JPanel();
    jScrollPane2 = new javax.swing.JScrollPane();
    areaUnitTypeProperties = new javax.swing.JTextArea();
    jMenuBar1 = new javax.swing.JMenuBar();
    jMenu1 = new javax.swing.JMenu();
    miSaveAll = new javax.swing.JMenuItem();
    miSaveAllAs = new javax.swing.JMenuItem();
    miOpen = new javax.swing.JMenuItem();
    miImport = new javax.swing.JMenuItem();
    jMenu2 = new javax.swing.JMenu();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    jSplitPane1.setDividerLocation(200);

    listUnitTypes.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        listUnitTypesMouseClicked(evt);
      }
    });
    jScrollPane1.setViewportView(listUnitTypes);

    btnNewUnitType.setText("New Composite");
    btnNewUnitType.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnNewUnitTypeActionPerformed(evt);
      }
    });

    btnEditUnitType.setText("Edit");
    btnEditUnitType.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnEditUnitTypeActionPerformed(evt);
      }
    });

    btnCloneUnitType.setText("Clone");
    btnCloneUnitType.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnCloneUnitTypeActionPerformed(evt);
      }
    });

    btnDeleteUnitType.setText("Delete");
    btnDeleteUnitType.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnDeleteUnitTypeActionPerformed(evt);
      }
    });

    btnMoveUnitDown.setText("v");
    btnMoveUnitDown.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnMoveUnitDownActionPerformed(evt);
      }
    });

    btnMoveUnitUp.setText("^");
    btnMoveUnitUp.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnMoveUnitUpActionPerformed(evt);
      }
    });

    btnSave.setText("Save");
    btnSave.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnSaveActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnEditUnitType)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave))
              .addComponent(btnDeleteUnitType)
              .addComponent(btnCloneUnitType))
            .addContainerGap(103, Short.MAX_VALUE))
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(btnNewUnitType)
              .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnMoveUnitUp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMoveUnitDown)))
            .addGap(0, 0, Short.MAX_VALUE))))
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(btnMoveUnitDown)
          .addComponent(btnMoveUnitUp))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(btnNewUnitType)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(btnEditUnitType)
          .addComponent(btnSave))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(btnCloneUnitType)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(btnDeleteUnitType)
        .addContainerGap(90, Short.MAX_VALUE))
    );

    jSplitPane1.setLeftComponent(jPanel1);

    areaUnitTypeProperties.setColumns(20);
    areaUnitTypeProperties.setRows(5);
    jScrollPane2.setViewportView(areaUnitTypeProperties);

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel2Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 574, Short.MAX_VALUE)
        .addContainerGap())
    );
    jPanel2Layout.setVerticalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel2Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 505, Short.MAX_VALUE)
        .addContainerGap())
    );

    jSplitPane1.setRightComponent(jPanel2);

    jMenu1.setText("File");

    miSaveAll.setText("Save all");
    miSaveAll.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        miSaveAllActionPerformed(evt);
      }
    });
    jMenu1.add(miSaveAll);

    miSaveAllAs.setText("Save all as...");
    miSaveAllAs.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        miSaveAllAsActionPerformed(evt);
      }
    });
    jMenu1.add(miSaveAllAs);

    miOpen.setText("Open...");
    miOpen.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        miOpenActionPerformed(evt);
      }
    });
    jMenu1.add(miOpen);

    miImport.setText("Import...");
    miImport.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        miImportActionPerformed(evt);
      }
    });
    jMenu1.add(miImport);

    jMenuBar1.add(jMenu1);

    jMenu2.setText("Edit");
    jMenuBar1.add(jMenu2);

    setJMenuBar(jMenuBar1);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jSplitPane1)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jSplitPane1)
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void btnNewUnitTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewUnitTypeActionPerformed
    new FrameEditDirectedCompositeUnit(unitTypeList, new DirectedCompositeUnit(0, 0), null).setVisible(true);
  }//GEN-LAST:event_btnNewUnitTypeActionPerformed

  private void btnEditUnitTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditUnitTypeActionPerformed
    for (Object o : listUnitTypes.getSelectedValuesList()) {
      if (o instanceof DirectedCompositeUnit) {
        try {
          new FrameEditDirectedCompositeUnit(unitTypeList, (DirectedCompositeUnit)((DirectedCompositeUnit)o).copy(), ((DirectedCompositeUnit)o)).setVisible(true);
        } catch (IOException ex) {
          Logger.getLogger(FrameMain.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
          Logger.getLogger(FrameMain.class.getName()).log(Level.SEVERE, null, ex);
        }
      }
    }
  }//GEN-LAST:event_btnEditUnitTypeActionPerformed

  private void listUnitTypesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listUnitTypesMouseClicked
    if (evt.getClickCount() == 2) {
      btnEditUnitTypeActionPerformed(null);
    }
  }//GEN-LAST:event_listUnitTypesMouseClicked

  private void btnMoveUnitUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoveUnitUpActionPerformed
    //TODO Could support groups, if I felt like being CRAZY
    int idx = listUnitTypes.getSelectedIndex();
    if (idx > 0) {
      Unit u = unitTypeList.get(idx);
      unitTypeList.removeElementAt(idx);
      unitTypeList.add(idx - 1, u);
      listUnitTypes.setSelectedIndex(idx - 1);
    }
  }//GEN-LAST:event_btnMoveUnitUpActionPerformed

  private void btnMoveUnitDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoveUnitDownActionPerformed
    //TODO Could support groups, if I felt like being CRAZY
    int idx = listUnitTypes.getSelectedIndex();
    if (idx >= 0 && idx < unitTypeList.size() - 1) {
      Unit u = unitTypeList.get(idx);
      unitTypeList.removeElementAt(idx);
      unitTypeList.add(idx + 1, u);
      listUnitTypes.setSelectedIndex(idx + 1);
    }
  }//GEN-LAST:event_btnMoveUnitDownActionPerformed

  private void btnCloneUnitTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloneUnitTypeActionPerformed
    for (Object o : listUnitTypes.getSelectedValuesList()) {
      if (o instanceof Unit) {
        try {
          int idx = unitTypeList.indexOf(o);
          Unit copy = ((Unit)o).copy();
          unitTypeList.add(idx + 1, copy);
        } catch (IOException ex) {
          Logger.getLogger(FrameMain.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
          Logger.getLogger(FrameMain.class.getName()).log(Level.SEVERE, null, ex);
        }
      }
    }
  }//GEN-LAST:event_btnCloneUnitTypeActionPerformed

  private void btnDeleteUnitTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteUnitTypeActionPerformed
    for (Object o : listUnitTypes.getSelectedValuesList()) {
      unitTypeList.removeElement(o);
    }
  }//GEN-LAST:event_btnDeleteUnitTypeActionPerformed

  public JFileChooser fileChooser = new JFileChooser();
  
  private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
    ArrayList al = new ArrayList(listUnitTypes.getSelectedValuesList());
    if (al.size() == 0) {
    } else if (al.size() == 1) {
      if (fileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
        DeviceEngine.saveObjectToFile(al.get(0), fileChooser.getSelectedFile());
      }
    } else {
      if (fileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
        DeviceEngine.saveObjectToFile(al, fileChooser.getSelectedFile());
      }
    }
  }//GEN-LAST:event_btnSaveActionPerformed

  private void saveAllToFile(File f) {
    ArrayList al = new ArrayList(Arrays.asList(unitTypeList.toArray()));
    DeviceEngine.saveObjectToFile(al, f);
  }
  
  private void miSaveAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSaveAllActionPerformed
    if (fileChooser.getSelectedFile() == null) {
      miSaveAllAsActionPerformed(evt);
    } else {
      saveAllToFile(fileChooser.getSelectedFile());
    }
  }//GEN-LAST:event_miSaveAllActionPerformed

  private void miSaveAllAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSaveAllAsActionPerformed
    if (fileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
      saveAllToFile(fileChooser.getSelectedFile());
    }
  }//GEN-LAST:event_miSaveAllAsActionPerformed
  
  private void miOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miOpenActionPerformed
    if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
      File f = fileChooser.getSelectedFile();
      Object result = DeviceEngine.readFile(f);
      if (result == null) {
        JOptionPane.showMessageDialog(this, "Error!  Check console output.");
        return;
      }
      if (result instanceof Unit) {
        unitTypeList.clear();
        unitTypeList.addElement((Unit)result);
      } else if (result instanceof ArrayList) {
        unitTypeList.clear();
        for (Object o : ((ArrayList)result)) {
          unitTypeList.addElement((Unit)o);
        }
      } else {
        JOptionPane.showMessageDialog(this, "Error!  Check console output.");
        System.err.println("Invalid object type: " + result.getClass());
      }
    }
  }//GEN-LAST:event_miOpenActionPerformed

  private void miImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miImportActionPerformed
    if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
      File f = fileChooser.getSelectedFile();
      Object result = DeviceEngine.readFile(f);
      if (result == null) {
        JOptionPane.showMessageDialog(this, "Error!  Check console output.");
        return;
      }
      if (result instanceof Unit) {
        unitTypeList.addElement((Unit)result);
      } else if (result instanceof ArrayList) {
        for (Object o : ((ArrayList)result)) {
          unitTypeList.addElement((Unit)o);
        }
      } else {
        JOptionPane.showMessageDialog(this, "Error!  Check console output.");
        System.err.println("Invalid object type: " + result.getClass());
      }
    }
  }//GEN-LAST:event_miImportActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(FrameMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(FrameMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(FrameMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(FrameMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
        //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new FrameMain().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JTextArea areaUnitTypeProperties;
  private javax.swing.JButton btnCloneUnitType;
  private javax.swing.JButton btnDeleteUnitType;
  private javax.swing.JButton btnEditUnitType;
  private javax.swing.JButton btnMoveUnitDown;
  private javax.swing.JButton btnMoveUnitUp;
  private javax.swing.JButton btnNewUnitType;
  private javax.swing.JButton btnSave;
  private javax.swing.JMenu jMenu1;
  private javax.swing.JMenu jMenu2;
  private javax.swing.JMenuBar jMenuBar1;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JSplitPane jSplitPane1;
  private javax.swing.JList listUnitTypes;
  private javax.swing.JMenuItem miImport;
  private javax.swing.JMenuItem miOpen;
  private javax.swing.JMenuItem miSaveAll;
  private javax.swing.JMenuItem miSaveAllAs;
  // End of variables declaration//GEN-END:variables
}
